apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "open-ondemand.fullname" . }}-hostbased-auth
data:
  hostbased.sh: |
    #!/bin/bash
  {{ if eq .Values.setupLDAP true }}
    while read -r line; do
      user=`echo $line`
      uid=`id $user | tr -s ' ' '\n'| grep uid | sed -r 's/uid=//g' | sed 's/(.*//'`
      gid=`id $user | tr -s ' ' '\n'| grep gid | sed -r 's/gid=//g' | sed 's/(.*//'`
      groupname=`id $user | tr -s ' ' '\n'| grep gid | sed 's/.*(//' | tr -s ')' ' '`
      groupadd $groupname && groupmod -g $gid $groupname
    done < /shared/users.txt
    supervisorctl restart autofs
  {{ end }}
    mkdir -p {{ .Values.advanced.fileSharing.mountPoint }}
  {{ if eq .Values.advanced.NFS true }}
    for i in `ls {{ .Values.advanced.fileSharing.mountPoint }}`; do
      ln -s {{ .Values.advanced.fileSharing.mountPoint }}/$i /home/$i
    done
  {{ end }}
  {{ range .Values.testUsers }}
    useradd {{ .user.name }}
  {{ end }}
    array=()
    groupmod -g {{ .Values.advanced.ssh_keys_GID }} ssh_keys
    for i in `ls /root | grep .pub`; do
      array+=("$i")
    done
    for i in ${array[@]}; do
      cat /root/$i > /etc/ssh/$i && chmod 0644 /etc/ssh/$i
    done
    array=()
    for i in `ls /root/*_key | sed 's/\/root\///g'`; do
      array+=("$i")
    done
    for i in ${array[@]}; do
      cat /root/$i > /etc/ssh/$i && chmod 0640 /etc/ssh/$i && chgrp ssh_keys /etc/ssh/$i
    done
    chgrp ssh_keys /usr/libexec/openssh/ssh-keysign
    chmod g+s /usr/libexec/openssh/ssh-keysign

    # Temporary fix for HTTP Error: 422 when using Interactive Apps
    cat > /var/www/ood/apps/sys/dashboard/config/initializers/session_store.rb <<EOF
    # contents of /var/www/ood/apps/sys/dashboard/config/initializers/session_store.rb
    # This is what it currently is, which doesn't work over plain http
    #Rails.application.config.session_store :cookie_store, key: '_dashboard_session', secure: Rails.env.production?

    # This option may be a little more secure. Here I'm making a temp directory which should be 700 so other 
    # folks can read these files. You could also use "#{ENV['HOME']/.ood-cache}" if you think a home directory would be better.
    Rails.application.config.session_store :cache_store, { cache: ActiveSupport::Cache::FileStore.new(Dir.mktmpdir.to_s) }
    EOF